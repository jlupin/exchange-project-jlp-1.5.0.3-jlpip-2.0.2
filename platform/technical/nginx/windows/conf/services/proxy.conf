# location / for SERVLET api
location / {
  set $backend '';
  set $frontendBaseURL '';
  set $backendBaseURL '';

  rewrite_by_lua_block {

    JLupinLocationProxy(
      ngx.var.server_port,
      ngx.var.server_type,
      G_API_TYPE.SERVLET,
      "NULL",
      HttpGetElementFromURI(ngx.var.request_uri,1)
      )

  }

  proxy_pass        $backend;
  proxy_redirect    $backendBaseURL $frontendBaseURL;
  proxy_http_version 1.1;
  proxy_set_header  Upgrade $http_upgrade;
  proxy_set_header  Connection $connection_upgrade;

}

# location /_healthcheck for SERVLET api
location /_healthcheck {

  keepalive_timeout 0;

  access_by_lua_block {

    JLupinLocationHealthcheck(
      ngx.var.server_port,
      G_API_TYPE.SERVLET,
      "NULL",
      HttpGetElementFromURI(ngx.var.request_uri,2)
      )
  }
}

# location /_eapi for NATIVE api (ELASTIC API)
location /_eapi {
  set $backend '';
  set $frontendBaseURL '';
  set $backendBaseURL '';

  rewrite_by_lua_block {

    JLupinLocationProxy(
      ngx.var.server_port,
      ngx.var.server_type,
      G_API_TYPE.NATIVE,
      HttpGetElementFromURI(ngx.var.request_uri,2),
      HttpGetElementFromURI(ngx.var.request_uri,3)
      )
  }

  proxy_pass        $backend;
  proxy_redirect    $backendBaseURL $frontendBaseURL;
}

# location /_healthcheck for NATIVE api (ELASTIC API)
location ~ ^/_eapi/[^/]+/_healthcheck {

  keepalive_timeout 0;

  access_by_lua_block {

    JLupinLocationHealthcheck(
      ngx.var.server_port,
      G_API_TYPE.NATIVE,
      HttpGetElementFromURI(ngx.var.request_uri,2),
      HttpGetElementFromURI(ngx.var.request_uri,4)
      )
  }

}
